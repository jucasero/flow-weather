{"version":3,"sources":["services/home.ts","state/types/homeType.ts","components/common/Card/Card.tsx","components/common/Message/Message.tsx","components/common/Select/Select.tsx","components/common/Spinner/Spinner.tsx","components/layout/Header/Header.tsx","components/layout/Footer/Footer.tsx","assets/icons/linkedin-icon.svg","assets/icons/github-icon.svg","hooks/useGeo.ts","views/Home/index.ts","state/actions/homeAction.ts","views/Home/Home.tsx","views/Login/Login.tsx","views/NotFound/NotFound.tsx","App.tsx","state/reducers/homeReducer.ts","state/reducers/index.ts","state/store.ts","index.tsx"],"names":["getWeatherFetch","params","axios","get","WEATHER_LOADING","WEATHER_FAIL","WEATHER_SUCCESS","Card","props","date","dayWeatherDescripton","icon","tempeture","feelsLike","humidity","clouds","rainPosibility","pressure","windSpeed","uvi","dewPoint","visibility","sunrise","sunset","formatValues","value","type","Math","round","Date","toLocaleTimeString","navigator","language","hour","minute","String","renderRowCardDescription","firstSubtitle","firstDescription","secondSubtitle","secodDescription","className","newDate","Number","getDay","setCardTitle","src","alt","undefined","Message","title","description","Select","data","handleChange","onChange","map","i","JSON","stringify","Spinner","Header","Footer","githubIcon","linkedinIcon","githubLink","linkedinLink","githubText","linkedinText","href","target","rel","useGeo","useState","latitude","longitude","error","coordinates","setCoordinates","useEffect","geolocation","getCurrentPosition","showPosition","showError","position","coords","code","mapDispatchToProps","getWeather","dispatch","a","response","payload","Home","connect","state","store","homeReducer","loader","setLoader","cityCoordinates","setCityCoordinates","current","weather","daily","lat","lon","cities","setCities","unshift","loading","Object","keys","length","exclude","units","lang","appid","event","parse","temp","feels_like","wind_speed","dew_point","day","dt","pop","Login","message","buttonText","to","NotFound","App","path","element","initialState","combineReducers","action","createStore","reducers","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1720004.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { IResponse } from '../state/models';\r\nimport { IGetWeatherParams } from '../views/Home/models';\r\n\r\nconst BASE_URL = 'https://api.openweathermap.org';\r\n\r\nexport const getWeatherFetch = (params: IGetWeatherParams): Promise<IResponse> =>\r\n  axios.get(`${BASE_URL}/data/2.5/onecall`, { params: params });\r\n","export const WEATHER_LOADING = 'WEATHER_LOADING';\r\nexport const WEATHER_FAIL = 'WEATHER_FAIL';\r\nexport const WEATHER_SUCCESS = 'WEATHER_SUCCESS';\r\n","import './style.css';\r\n\r\ninterface ICardProps {\r\n  date: number | string;\r\n  dayWeatherDescripton: string;\r\n  icon: string;\r\n  tempeture: number;\r\n  feelsLike: number;\r\n  humidity: number;\r\n  clouds?: number;\r\n  rainPosibility?: number;\r\n  pressure: number;\r\n  windSpeed: number;\r\n  uvi: number;\r\n  dewPoint: number;\r\n  visibility: number;\r\n  sunrise: number;\r\n  sunset: number;\r\n}\r\n\r\nexport const Card: React.FC<ICardProps> = (props: ICardProps) => {\r\n  const {\r\n    date,\r\n    dayWeatherDescripton,\r\n    icon,\r\n    tempeture,\r\n    feelsLike,\r\n    humidity,\r\n    clouds,\r\n    rainPosibility,\r\n    pressure,\r\n    windSpeed,\r\n    uvi,\r\n    dewPoint,\r\n    visibility,\r\n    sunrise,\r\n    sunset\r\n  } = props;\r\n\r\n  const setCardTitle = () => {\r\n    let newDate = date;\r\n    if (typeof date === 'number') {\r\n      const days = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'domingo'];\r\n      const millisecondsDate = new Date(Number(newDate) * 1000);\r\n      newDate = days[millisecondsDate.getDay()];\r\n    }\r\n    return newDate + ' - ' + dayWeatherDescripton;\r\n  };\r\n\r\n  const formatValues = (value: number, type?: string) => {\r\n    switch (type) {\r\n      case 'temperature':\r\n        return Math.round(value) + ' °c';\r\n      case 'percentage':\r\n        return Math.round(value) + ' %';\r\n      case 'pressure':\r\n        return Math.round(value) + ' hPa';\r\n      case 'speed':\r\n        return Math.round(value) + ' m/s';\r\n      case 'distance':\r\n        return Math.round(value) + ' m';\r\n      case 'time':\r\n        return new Date(value * 1000).toLocaleTimeString(navigator.language, {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        });\r\n      default:\r\n        return String(Math.round(value));\r\n    }\r\n  };\r\n\r\n  const renderRowCardDescription = (\r\n    firstSubtitle: string,\r\n    firstDescription: string,\r\n    secondSubtitle: string,\r\n    secodDescription: string\r\n  ) => (\r\n    <div className='card__row'>\r\n      <div className='card__col'>\r\n        <h4 className='card__col__item'>{firstSubtitle}</h4>\r\n        <p className='card__col__item'>{firstDescription}</p>\r\n      </div>\r\n      <div className='card__col'>\r\n        <h4 className='card__col__item'>{secondSubtitle}</h4>\r\n        <p className='card__col__item'>{secodDescription}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card__row__title'>\r\n        <h2>{setCardTitle()}</h2>\r\n      </div>\r\n      <div className='card__row'>\r\n        <img\r\n          className='car__row__image'\r\n          src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          alt='imagen del clima'\r\n        />\r\n        <h1>{formatValues(tempeture, 'temperature')}</h1>\r\n      </div>\r\n      {renderRowCardDescription(\r\n        'Sensacion real',\r\n        formatValues(feelsLike, 'temperature'),\r\n        'Humedad',\r\n        formatValues(humidity, 'percentage')\r\n      )}\r\n      {clouds !== undefined\r\n        ? renderRowCardDescription(\r\n            'Nubosidad',\r\n            formatValues(clouds, 'percentage'),\r\n            'Presion',\r\n            formatValues(pressure, 'pressure')\r\n          )\r\n        : renderRowCardDescription(\r\n            'Probabilidad de lluvia',\r\n            formatValues(rainPosibility! * 100, 'percentage'),\r\n            'Presion',\r\n            formatValues(pressure, 'pressure')\r\n          )}\r\n      {renderRowCardDescription(\r\n        'Velocidad del viento',\r\n        formatValues(windSpeed, 'speed'),\r\n        'Índice UV',\r\n        formatValues(uvi)\r\n      )}\r\n      {renderRowCardDescription(\r\n        'Punto de rocío',\r\n        formatValues(dewPoint, 'temperature'),\r\n        'Visibilidad',\r\n        formatValues(visibility, 'distance')\r\n      )}\r\n      {renderRowCardDescription('Amanecer', formatValues(sunrise, 'time'), 'Atardecer', formatValues(sunset, 'time'))}\r\n    </div>\r\n  );\r\n};\r\n","import './style.css';\r\n\r\ninterface IMessageProps {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport const Message: React.FC<IMessageProps> = (props: IMessageProps) => {\r\n  const { title, description } = props;\r\n  return (\r\n    <div className='section__message'>\r\n      <h2>{title}</h2>\r\n      <h4>{description}</h4>\r\n    </div>\r\n  );\r\n};\r\n","import { ICity } from '../../../views/Home/models';\r\nimport './style.css';\r\n\r\ninterface ISelectProps {\r\n  data: ICity[];\r\n  handleChange(event: React.ChangeEvent<HTMLSelectElement>): void;\r\n}\r\n\r\nexport const Select: React.FC<ISelectProps> = (props: ISelectProps) => {\r\n  const { data, handleChange } = props;\r\n\r\n  const formatOptionValue = (value: number | string | object) => {\r\n    if (typeof value === 'object') return JSON.stringify(value);\r\n    return value;\r\n  };\r\n\r\n  return (\r\n    <select className='select' onChange={handleChange}>\r\n      {data.map((data, i) => (\r\n        <option className='select__option' key={data.description + i} value={formatOptionValue(data.value)}>\r\n          {data.description}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n","import './style.css';\r\n\r\nexport const Spinner: React.FC = () => (\r\n  <div className='center'>\r\n    <div className='lds__ring'>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n);\r\n","import './style.css';\r\n\r\ninterface IHeaderProps {\r\n  title: string;\r\n}\r\n\r\nexport const Header: React.FC<IHeaderProps> = (props: IHeaderProps) => {\r\n  const { title } = props;\r\n  return (\r\n    <header className='header'>\r\n      <h2>{title}</h2>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import './style.css';\r\n\r\ninterface IFooterProps {\r\n  githubIcon: string;\r\n  linkedinIcon: string;\r\n  githubLink: string;\r\n  linkedinLink: string;\r\n  githubText: string;\r\n  linkedinText: string;\r\n}\r\n\r\nexport const Footer: React.FC<IFooterProps> = (props: IFooterProps) => {\r\n  const { githubIcon, linkedinIcon, githubLink, linkedinLink, githubText, linkedinText } = props;\r\n\r\n  return (\r\n    <footer className='footer'>\r\n      <a className='footer__item' href={githubLink} target='_blank' rel='noreferrer'>\r\n        <img className='footer__image' src={githubIcon} alt='github icon' />\r\n        <h3 className='footer__image__text'>{githubText}</h3>\r\n      </a>\r\n      <div className='footer__item'>\r\n        <a className='footer__item' href={linkedinLink} target='_blank' rel='noreferrer'>\r\n          <img className='footer__image' src={linkedinIcon} alt='linkedin icon' />\r\n          <h3 className='footer__image__text'>{linkedinText}</h3>\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/linkedin-icon.ca6a0d94.svg\";","export default __webpack_public_path__ + \"static/media/github-icon.b7137fc9.svg\";","import { useEffect, useState } from 'react';\r\n\r\ninterface ICoordinates {\r\n  latitude: number | null;\r\n  longitude: number | null;\r\n  error: boolean | null;\r\n}\r\n\r\nconst useGeo = () => {\r\n  const [coordinates, setCoordinates] = useState<ICoordinates>({\r\n    latitude: null,\r\n    longitude: null,\r\n    error: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(showPosition, showError);\r\n  }, [coordinates.error]);\r\n\r\n  const showPosition = (position: any) => {\r\n    setCoordinates({\r\n      latitude: position.coords.latitude,\r\n      longitude: position.coords.longitude,\r\n      error: false\r\n    });\r\n  };\r\n  const showError = (error: any) => {\r\n    if (error.code)\r\n      setCoordinates({\r\n        latitude: null,\r\n        longitude: null,\r\n        error: true\r\n      });\r\n  };\r\n\r\n  return coordinates;\r\n};\r\n\r\nexport default useGeo;\r\n","import { connect } from 'react-redux';\r\nimport { getWeather } from '../../state/actions/homeAction';\r\nimport { HomeComponent } from './Home';\r\nimport { RootState } from '../../state/store';\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  store: {\r\n    ...state.homeReducer\r\n  }\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWeather\r\n};\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(HomeComponent);\r\n","import { Dispatch } from 'redux';\r\n\r\nimport { getWeatherFetch } from '../../services/home';\r\nimport { IGetWeatherParams } from '../../views/Home/models';\r\nimport { IActionDispatch } from '../models';\r\nimport { WEATHER_LOADING, WEATHER_SUCCESS, WEATHER_FAIL } from '../types/homeType';\r\n\r\nexport const getWeather = (params: IGetWeatherParams) => async (dispatch: Dispatch<IActionDispatch>) => {\r\n  dispatch({\r\n    type: WEATHER_LOADING\r\n  });\r\n  try {\r\n    const response = await getWeatherFetch(params);\r\n    dispatch({ type: WEATHER_SUCCESS, payload: response.data });\r\n  } catch (error: any) {\r\n    dispatch({ type: WEATHER_FAIL, payload: error });\r\n  }\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { Card, Message, Select, Spinner } from '../../components/common';\r\nimport { Header, Footer } from '../../components/layout';\r\nimport { IHomeReducer } from '../../state/models';\r\nimport { ICity, ICoordinates, ICurrent, IDaily, IGetWeatherParams } from './models';\r\n\r\nimport linkedinIcon from '../../assets/icons/linkedin-icon.svg';\r\nimport githubIcon from '../../assets/icons/github-icon.svg';\r\nimport useGeo from '../../hooks/useGeo';\r\nimport './style.css';\r\n\r\ninterface IHomeProps {\r\n  getWeather(params: IGetWeatherParams): void;\r\n  store: IHomeReducer;\r\n}\r\n\r\nexport const HomeComponent: React.FC<IHomeProps> = (props: IHomeProps) => {\r\n  const { getWeather, store } = props;\r\n  const [loader, setLoader] = useState(true);\r\n  const [cityCoordinates, setCityCoordinates] = useState<ICoordinates | null>(null);\r\n  const current: ICurrent = store.weather.data.current;\r\n  const daily: IDaily[] = store.weather.data.daily;\r\n  const geolocation = useGeo();\r\n  const [cities, setCities] = useState<ICity[]>([\r\n    { description: 'Bogotá', value: { lat: 4.601874, lon: -74.071648 } },\r\n    { description: 'Barcelona', value: { lat: 41.40319, lon: 2.175026 } },\r\n    { description: 'Sydney', value: { lat: -33.856721, lon: 151.21525 } },\r\n    { description: 'Estocolmo', value: { lat: 59.329184, lon: 18.090643 } },\r\n    { description: 'Cairo', value: { lat: 30.031534, lon: 31.254341 } }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (geolocation.error !== null) {\r\n      if (geolocation.latitude && geolocation.longitude) {\r\n        cities.unshift({\r\n          description: 'Ubicación actual',\r\n          value: { lat: geolocation.latitude, lon: geolocation.longitude }\r\n        });\r\n        setCities(cities);\r\n        setCityCoordinates({\r\n          lat: geolocation.latitude,\r\n          lon: geolocation.longitude\r\n        });\r\n      } else setCityCoordinates(cities[0].value);\r\n    }\r\n  }, [geolocation.error]);\r\n\r\n  useEffect(() => {\r\n    if (!store.weather.loading && Object.keys(store.weather.data).length && geolocation.error !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [store.weather.loading, geolocation.error]);\r\n\r\n  useEffect(() => {\r\n    if (cityCoordinates)\r\n      getWeather({\r\n        lat: cityCoordinates.lat,\r\n        lon: cityCoordinates.lon,\r\n        exclude: 'minutely,hourly,alerts',\r\n        units: 'metric',\r\n        lang: 'es',\r\n        appid: '4876cc236ffcabea6a6aad9960a7ea32'\r\n      });\r\n  }, [cityCoordinates]);\r\n\r\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const value = JSON.parse(event.target.value);\r\n    setCityCoordinates(value);\r\n  };\r\n\r\n  const renderWeatherNextDays = () =>\r\n    daily.map((day: IDaily, i) => {\r\n      if (i > 0 && i < 6)\r\n        return (\r\n          <Card\r\n            key={day.dt + i}\r\n            date={day.dt}\r\n            dayWeatherDescripton={day.weather[0].description}\r\n            icon={day.weather[0].icon}\r\n            tempeture={day.temp.day}\r\n            feelsLike={day.feels_like.day}\r\n            humidity={day.humidity}\r\n            rainPosibility={day.pop}\r\n            pressure={day.pressure}\r\n            windSpeed={day.wind_speed}\r\n            uvi={day.uvi}\r\n            dewPoint={day.dew_point}\r\n            visibility={10000}\r\n            sunrise={day.sunrise}\r\n            sunset={day.sunset}\r\n          />\r\n        );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Header title='Flow Weather' />\r\n      <main className='home__main'>\r\n        {loader ? (\r\n          <section className='home__loader'>\r\n            <Spinner />\r\n          </section>\r\n        ) : store.weather.error ? (\r\n          <Message title='¡Lo sentimos!' description='En este momento el servicio no se encuentra disponible' />\r\n        ) : (\r\n          <>\r\n            <section className='home__today__weather'>\r\n              <div>\r\n                <Select data={cities} handleChange={handleChangeSelect} />\r\n              </div>\r\n              <Card\r\n                date={'Hoy'}\r\n                dayWeatherDescripton={current.weather[0].description}\r\n                icon={current.weather[0].icon}\r\n                tempeture={current.temp}\r\n                feelsLike={current.feels_like}\r\n                humidity={current.humidity}\r\n                clouds={current.clouds}\r\n                pressure={current.pressure}\r\n                windSpeed={current.wind_speed}\r\n                uvi={current.uvi}\r\n                dewPoint={current.dew_point}\r\n                visibility={current.visibility}\r\n                sunrise={current.sunrise}\r\n                sunset={current.sunset}\r\n              />\r\n            </section>\r\n            <section>\r\n              <h2 className='home__next__days__weather__title'>{'Pronóstico de los siguentes días'}</h2>\r\n              <div className='home__next__days__weather'>{renderWeatherNextDays()}</div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </main>\r\n      <Footer\r\n        githubIcon={githubIcon}\r\n        linkedinIcon={linkedinIcon}\r\n        githubLink='https://github.com/jucasero'\r\n        linkedinLink='https://www.linkedin.com/in/jucasero'\r\n        githubText='@jucasero'\r\n        linkedinText='@jucasero'\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { Link } from 'react-router-dom';\r\n\r\nimport './style.css';\r\n\r\ninterface ILoginProps {\r\n  message: string;\r\n  buttonText: string;\r\n}\r\n\r\nexport const Login: React.FC<ILoginProps> = (props: ILoginProps) => {\r\n  const { message, buttonText } = props;\r\n\r\n  return (\r\n    <main className='login__main'>\r\n      <div className='login__container'>\r\n        <h1>{message}</h1>\r\n        <Link to='/flow-weather/home'>\r\n          <button className='login__button'>{buttonText}</button>\r\n        </Link>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n","import { Link } from 'react-router-dom';\r\n\r\nimport './style.css';\r\n\r\ninterface INotFoundProps {\r\n  title: string;\r\n  description: string;\r\n  buttonText: string;\r\n}\r\nexport const NotFound: React.FC<INotFoundProps> = (props: INotFoundProps) => {\r\n  const { title, description, buttonText } = props;\r\n  return (\r\n    <main className='not__found__main'>\r\n      <div className='not__found__container'>\r\n        <h1 className='not__found__container__title'>{title}</h1>\r\n        <h4>{description}</h4>\r\n        <Link to='/flow-weather'>\r\n          <button className='not__found__button'>{buttonText}</button>\r\n        </Link>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n","import { Route, Routes } from 'react-router-dom';\r\nimport { NotFound, Home, Login } from './views';\r\n\r\nexport const App: React.FC = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path='/flow-weather' element={<Login message='Bienvenido a Flow Weather' buttonText='Ingresar' />} />\r\n      <Route path='/flow-weather/home' element={<Home />} />\r\n      <Route\r\n        path='*'\r\n        element={<NotFound title='¡Error 404!' description='Página no encontrada' buttonText='Volver al inicio' />}\r\n      />\r\n    </Routes>\r\n  );\r\n};\r\n","import { IActionDispatch, IHomeReducer } from '../models';\r\nimport { WEATHER_LOADING, WEATHER_SUCCESS, WEATHER_FAIL } from '../types/homeType';\r\n\r\nconst initialState: IHomeReducer = {\r\n  weather: {\r\n    data: {},\r\n    loading: false,\r\n    error: false\r\n  }\r\n};\r\n\r\nexport const homeReducer = (state = initialState, action: IActionDispatch) => {\r\n  switch (action.type) {\r\n    case WEATHER_LOADING:\r\n      return { ...state, weather: { ...state.weather, loading: true } };\r\n    case WEATHER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        weather: {\r\n          ...state.weather,\r\n          data: action.payload,\r\n          error: false,\r\n          loading: false\r\n        }\r\n      };\r\n    case WEATHER_FAIL:\r\n      return {\r\n        ...state,\r\n        weather: {\r\n          ...state.weather,\r\n          data: action.payload,\r\n          error: true,\r\n          loading: false\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { homeReducer } from './homeReducer';\r\n\r\nexport default combineReducers({\r\n  homeReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n\r\nexport const store = createStore(reducers, composeWithDevTools(applyMiddleware(reduxThunk)));\r\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport { store } from './state/store';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}