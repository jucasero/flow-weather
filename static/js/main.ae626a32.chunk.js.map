{"version":3,"sources":["services/home.ts","state/types/homeType.ts","components/common/Card/Card.tsx","components/common/Message/Message.tsx","components/common/Select/Select.tsx","components/common/Spinner/Spinner.tsx","components/layout/Header/Header.tsx","components/layout/Footer/Footer.tsx","assets/icons/linkedin-icon.svg","assets/icons/github-icon.svg","hooks/useGeo.ts","views/Home/index.ts","state/actions/homeAction.ts","views/Home/Home.tsx","views/Login/Login.tsx","views/NotFound/NotFound.tsx","App.tsx","state/reducers/homeReducer.ts","state/reducers/index.ts","state/store.ts","index.tsx"],"names":["getWeatherFetch","params","axios","get","WEATHER_LOADING","WEATHER_FAIL","WEATHER_SUCCESS","Card","props","date","dayWeatherDescripton","icon","tempeture","feelsLike","humidity","clouds","rainPosibility","pressure","windSpeed","uvi","dewPoint","visibility","sunrise","sunset","formatValues","value","type","Math","round","Date","toLocaleTimeString","navigator","language","hour","minute","String","renderRowCardDescription","firstSubtitle","firstDescription","secondSubtitle","secodDescription","className","newDate","Number","getDay","setCardTitle","src","alt","undefined","Message","title","description","Select","data","handleChange","onChange","map","i","JSON","stringify","Spinner","Header","Footer","githubIcon","linkedinIcon","githubLink","linkedinLink","githubText","linkedinText","href","target","rel","useGeo","useState","latitude","longitude","error","coordinates","setCoordinates","useEffect","geolocation","getCurrentPosition","showPosition","showError","position","coords","code","mapDispatchToProps","getWeather","dispatch","a","response","payload","Home","connect","state","store","homeReducer","loader","setLoader","cityCoordinates","setCityCoordinates","current","weather","daily","lat","lon","cities","setCities","unshift","loading","Object","keys","length","exclude","units","lang","appid","event","parse","temp","feels_like","wind_speed","dew_point","day","dt","pop","Login","to","NotFound","App","path","element","initialState","combineReducers","action","createStore","reducers","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae626a32.chunk.js","sourcesContent":["import axios from 'axios';\nimport { IResponse } from '../state/models';\nimport { IGetWeatherParams } from '../views/Home/models';\n\nconst BASE_URL = 'https://api.openweathermap.org';\n\nexport const getWeatherFetch = (params: IGetWeatherParams): Promise<IResponse> =>\n  axios.get(`${BASE_URL}/data/2.5/onecall`, { params: params });\n","export const WEATHER_LOADING = 'WEATHER_LOADING';\nexport const WEATHER_FAIL = 'WEATHER_FAIL';\nexport const WEATHER_SUCCESS = 'WEATHER_SUCCESS';\n","import './style.css';\n\ninterface ICardProps {\n  date: number | string;\n  dayWeatherDescripton: string;\n  icon: string;\n  tempeture: number;\n  feelsLike: number;\n  humidity: number;\n  clouds?: number;\n  rainPosibility?: number;\n  pressure: number;\n  windSpeed: number;\n  uvi: number;\n  dewPoint: number;\n  visibility: number;\n  sunrise: number;\n  sunset: number;\n}\n\nexport const Card: React.FC<ICardProps> = (props: ICardProps) => {\n  const {\n    date,\n    dayWeatherDescripton,\n    icon,\n    tempeture,\n    feelsLike,\n    humidity,\n    clouds,\n    rainPosibility,\n    pressure,\n    windSpeed,\n    uvi,\n    dewPoint,\n    visibility,\n    sunrise,\n    sunset\n  } = props;\n\n  const setCardTitle = () => {\n    let newDate = date;\n    if (typeof date === 'number') {\n      const days = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'domingo'];\n      const millisecondsDate = new Date(Number(newDate) * 1000);\n      newDate = days[millisecondsDate.getDay()];\n    }\n    return newDate + ' - ' + dayWeatherDescripton;\n  };\n\n  const formatValues = (value: number, type?: string) => {\n    switch (type) {\n      case 'temperature':\n        return Math.round(value) + ' °c';\n      case 'percentage':\n        return Math.round(value) + ' %';\n      case 'pressure':\n        return Math.round(value) + ' hPa';\n      case 'speed':\n        return Math.round(value) + ' m/s';\n      case 'distance':\n        return Math.round(value) + ' m';\n      case 'time':\n        return new Date(value * 1000).toLocaleTimeString(navigator.language, {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      default:\n        return String(Math.round(value));\n    }\n  };\n\n  const renderRowCardDescription = (\n    firstSubtitle: string,\n    firstDescription: string,\n    secondSubtitle: string,\n    secodDescription: string\n  ) => (\n    <div className='card__row'>\n      <div className='card__col'>\n        <h4 className='card__col__item'>{firstSubtitle}</h4>\n        <p className='card__col__item'>{firstDescription}</p>\n      </div>\n      <div className='card__col'>\n        <h4 className='card__col__item'>{secondSubtitle}</h4>\n        <p className='card__col__item'>{secodDescription}</p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className='card'>\n      <div className='card__row__title'>\n        <h2>{setCardTitle()}</h2>\n      </div>\n      <div className='card__row'>\n        <img\n          className='car__row__image'\n          src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n          alt='imagen del clima'\n        />\n        <h1>{formatValues(tempeture, 'temperature')}</h1>\n      </div>\n      {renderRowCardDescription(\n        'Sensacion real',\n        formatValues(feelsLike, 'temperature'),\n        'Humedad',\n        formatValues(humidity, 'percentage')\n      )}\n      {clouds !== undefined\n        ? renderRowCardDescription(\n            'Nubosidad',\n            formatValues(clouds, 'percentage'),\n            'Presion',\n            formatValues(pressure, 'pressure')\n          )\n        : renderRowCardDescription(\n            'Probabilidad de lluvia',\n            formatValues(rainPosibility! * 100, 'percentage'),\n            'Presion',\n            formatValues(pressure, 'pressure')\n          )}\n      {renderRowCardDescription(\n        'Velocidad del viento',\n        formatValues(windSpeed, 'speed'),\n        'Índice UV',\n        formatValues(uvi)\n      )}\n      {renderRowCardDescription(\n        'Punto de rocío',\n        formatValues(dewPoint, 'temperature'),\n        'Visibilidad',\n        formatValues(visibility, 'distance')\n      )}\n      {renderRowCardDescription('Amanecer', formatValues(sunrise, 'time'), 'Atardecer', formatValues(sunset, 'time'))}\n    </div>\n  );\n};\n","import './style.css';\n\ninterface IMessageProps {\n  title: string;\n  description: string;\n}\n\nexport const Message: React.FC<IMessageProps> = (props: IMessageProps) => {\n  const { title, description } = props;\n  return (\n    <div className='section__message'>\n      <h2>{title}</h2>\n      <h4>{description}</h4>\n    </div>\n  );\n};\n","import './style.css';\n\ninterface ISelectProps {\n  data: any[];\n  handleChange(event: React.ChangeEvent<HTMLSelectElement>): void;\n}\n\nexport const Select: React.FC<ISelectProps> = (props: ISelectProps) => {\n  const { data, handleChange } = props;\n\n  const formatOptionValue = (value: number | string | object) => {\n    if (typeof value === 'object') return JSON.stringify(value);\n    return value;\n  };\n\n  return (\n    <select className='select' onChange={handleChange}>\n      {data.map((data, i) => (\n        <option className='select__option' key={data.description + i} value={formatOptionValue(data.value)}>\n          {data.description}\n        </option>\n      ))}\n    </select>\n  );\n};\n","import './style.css';\n\nexport const Spinner: React.FC = () => (\n  <div className='center'>\n    <div className='lds__ring'>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n","import './style.css';\n\ninterface IHeaderProps {\n  title: string;\n}\n\nexport const Header: React.FC<IHeaderProps> = (props: IHeaderProps) => {\n  const { title } = props;\n  return (\n    <header className='header'>\n      <h2>{title}</h2>\n    </header>\n  );\n};\n\nexport default Header;\n","import './style.css';\n\ninterface IFooterProps {\n  githubIcon: string;\n  linkedinIcon: string;\n  githubLink: string;\n  linkedinLink: string;\n  githubText: string;\n  linkedinText: string;\n}\n\nexport const Footer: React.FC<IFooterProps> = (props: IFooterProps) => {\n  const { githubIcon, linkedinIcon, githubLink, linkedinLink, githubText, linkedinText } = props;\n\n  return (\n    <footer className='footer'>\n      <a className='footer__item' href={githubLink} target='_blank' rel='noreferrer'>\n        <img className='footer__image' src={githubIcon} alt='github icon' />\n        <h3 className='footer__image__text'>{githubText}</h3>\n      </a>\n      <div className='footer__item'>\n        <a className='footer__item' href={linkedinLink} target='_blank' rel='noreferrer'>\n          <img className='footer__image' src={linkedinIcon} alt='linkedin icon' />\n          <h3 className='footer__image__text'>{linkedinText}</h3>\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/linkedin-icon.ca6a0d94.svg\";","export default __webpack_public_path__ + \"static/media/github-icon.b7137fc9.svg\";","import { useEffect, useState } from 'react';\n\ninterface ICoordinates {\n  latitude: number | null;\n  longitude: number | null;\n  error: boolean | null;\n}\n\nconst useGeo = () => {\n  const [coordinates, setCoordinates] = useState<ICoordinates>({\n    latitude: null,\n    longitude: null,\n    error: null\n  });\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(showPosition, showError);\n  }, [coordinates.error]);\n\n  const showPosition = (position: any) => {\n    setCoordinates({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      error: false\n    });\n  };\n  const showError = (error: any) => {\n    if (error.code)\n      setCoordinates({\n        latitude: null,\n        longitude: null,\n        error: true\n      });\n  };\n\n  return coordinates;\n};\n\nexport default useGeo;\n","import { connect } from 'react-redux';\nimport { getWeather } from '../../state/actions/homeAction';\nimport { HomeComponent } from './Home';\nimport { RootState } from '../../state/store';\n\nconst mapStateToProps = (state: RootState) => ({\n  store: {\n    ...state.homeReducer\n  }\n});\n\nconst mapDispatchToProps = {\n  getWeather\n};\n\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(HomeComponent);\n","import { Dispatch } from 'redux';\n\nimport { getWeatherFetch } from '../../services/home';\nimport { IGetWeatherParams } from '../../views/Home/models';\nimport { IActionDispatch } from '../models';\nimport { WEATHER_LOADING, WEATHER_SUCCESS, WEATHER_FAIL } from '../types/homeType';\n\nexport const getWeather = (params: IGetWeatherParams) => async (dispatch: Dispatch<IActionDispatch>) => {\n  dispatch({\n    type: WEATHER_LOADING\n  });\n  try {\n    const response = await getWeatherFetch(params);\n    dispatch({ type: WEATHER_SUCCESS, payload: response.data });\n  } catch (error: any) {\n    dispatch({ type: WEATHER_FAIL, payload: error });\n  }\n};\n","import { useEffect, useState } from 'react';\n\nimport { Card, Message, Select, Spinner } from '../../components/common';\nimport { Header, Footer } from '../../components/layout';\nimport { IHomeReducer } from '../../state/models';\nimport { ICity, ICoordinates, ICurrent, IDaily, IGetWeatherParams } from './models';\n\nimport linkedinIcon from '../../assets/icons/linkedin-icon.svg';\nimport githubIcon from '../../assets/icons/github-icon.svg';\nimport useGeo from '../../hooks/useGeo';\nimport './style.css';\n\ninterface IHomeProps {\n  getWeather(params: IGetWeatherParams): void;\n  store: IHomeReducer;\n}\n\nexport const HomeComponent: React.FC<IHomeProps> = (props: IHomeProps) => {\n  const { getWeather, store } = props;\n  const [loader, setLoader] = useState(true);\n  const [cityCoordinates, setCityCoordinates] = useState<ICoordinates | null>(null);\n  const current: ICurrent = store.weather.data.current;\n  const daily: IDaily[] = store.weather.data.daily;\n  const geolocation = useGeo();\n  const [cities, setCities] = useState<ICity[]>([\n    { description: 'Bogotá', value: { lat: 4.601874, lon: -74.071648 } },\n    { description: 'Barcelona', value: { lat: 41.40319, lon: 2.175026 } },\n    { description: 'Sydney', value: { lat: -33.856721, lon: 151.21525 } },\n    { description: 'Estocolmo', value: { lat: 59.329184, lon: 18.090643 } },\n    { description: 'Cairo', value: { lat: 30.031534, lon: 31.254341 } }\n  ]);\n\n  useEffect(() => {\n    if (geolocation.error !== null) {\n      if (geolocation.latitude && geolocation.longitude) {\n        cities.unshift({\n          description: 'Ubicación actual',\n          value: { lat: geolocation.latitude, lon: geolocation.longitude }\n        });\n        setCities(cities);\n        setCityCoordinates({\n          lat: geolocation.latitude,\n          lon: geolocation.longitude\n        });\n      } else setCityCoordinates(cities[0].value);\n    }\n  }, [geolocation.error]);\n\n  useEffect(() => {\n    if (!store.weather.loading && Object.keys(store.weather.data).length && geolocation.error !== null) {\n      setLoader(false);\n    }\n  }, [store.weather.loading, geolocation.error]);\n\n  useEffect(() => {\n    if (cityCoordinates)\n      getWeather({\n        lat: cityCoordinates.lat,\n        lon: cityCoordinates.lon,\n        exclude: 'minutely,hourly,alerts',\n        units: 'metric',\n        lang: 'es',\n        appid: '4876cc236ffcabea6a6aad9960a7ea32'\n      });\n  }, [cityCoordinates]);\n\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = JSON.parse(event.target.value);\n    setCityCoordinates(value);\n  };\n\n  const renderWeatherNextDays = () =>\n    daily.map((day: IDaily, i) => {\n      if (i > 0 && i < 6)\n        return (\n          <Card\n            key={day.dt + i}\n            date={day.dt}\n            dayWeatherDescripton={day.weather[0].description}\n            icon={day.weather[0].icon}\n            tempeture={day.temp.day}\n            feelsLike={day.feels_like.day}\n            humidity={day.humidity}\n            rainPosibility={day.pop}\n            pressure={day.pressure}\n            windSpeed={day.wind_speed}\n            uvi={day.uvi}\n            dewPoint={day.dew_point}\n            visibility={10000}\n            sunrise={day.sunrise}\n            sunset={day.sunset}\n          />\n        );\n    });\n\n  return (\n    <>\n      <Header title='Flow Weather' />\n      <main className='home__main'>\n        {loader ? (\n          <section className='home__loader'>\n            <Spinner />\n          </section>\n        ) : store.weather.error ? (\n          <Message title='¡Lo sentimos!' description='En este momento el servicio no se encuentra disponible' />\n        ) : (\n          <>\n            <section className='home__today__weather'>\n              <div>\n                <Select data={cities} handleChange={handleChangeSelect} />\n              </div>\n              <Card\n                date={'Hoy'}\n                dayWeatherDescripton={current.weather[0].description}\n                icon={current.weather[0].icon}\n                tempeture={current.temp}\n                feelsLike={current.feels_like}\n                humidity={current.humidity}\n                clouds={current.clouds}\n                pressure={current.pressure}\n                windSpeed={current.wind_speed}\n                uvi={current.uvi}\n                dewPoint={current.dew_point}\n                visibility={current.visibility}\n                sunrise={current.sunrise}\n                sunset={current.sunset}\n              />\n            </section>\n            <section>\n              <h2 className='home__next__days__weather__title'>{'Pronóstico de los siguentes días'}</h2>\n              <div className='home__next__days__weather'>{renderWeatherNextDays()}</div>\n            </section>\n          </>\n        )}\n      </main>\n      <Footer\n        githubIcon={githubIcon}\n        linkedinIcon={linkedinIcon}\n        githubLink='https://github.com/jucasero'\n        linkedinLink='https://www.linkedin.com/in/jucasero'\n        githubText='@jucasero'\n        linkedinText='@jucasero'\n      />\n    </>\n  );\n};\n","import './style.css';\nimport { Link } from 'react-router-dom';\n\nexport const Login: React.FC = () => (\n  <main className='login__main'>\n    <div className='login__container'>\n      <h1>Bienvenido a Flow Weather</h1>\n      <Link to='/home'>\n        <button className='login__button'>Ingresar</button>\n      </Link>\n    </div>\n  </main>\n);\n","import './style.css';\nimport { Link } from 'react-router-dom';\n\nexport const NotFound: React.FC = () => (\n  <main className='not__found__main'>\n    <div className='not__found__container'>\n      <h1 className='not__found__container__title'>¡Error 404!</h1>\n      <h4>Pagina no encontrada</h4>\n      <Link to='/'>\n        <button className='not__found__button'>Volver al Inicio</button>\n      </Link>\n    </div>\n  </main>\n);\n","import { Route, Routes } from 'react-router-dom';\r\nimport { NotFound, Home, Login } from './views';\r\n\r\nexport const App: React.FC = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path='/' element={<Login />} />\r\n      <Route path='/home' element={<Home />} />\r\n      <Route path='*' element={<NotFound />} />\r\n    </Routes>\r\n  );\r\n};\r\n","import { IActionDispatch, IHomeReducer } from '../models';\nimport { WEATHER_LOADING, WEATHER_SUCCESS, WEATHER_FAIL } from '../types/homeType';\n\nconst initialState: IHomeReducer = {\n  weather: {\n    data: {},\n    loading: false,\n    error: false\n  }\n};\n\nexport const homeReducer = (state = initialState, action: IActionDispatch) => {\n  switch (action.type) {\n    case WEATHER_LOADING:\n      return { ...state, weather: { ...state.weather, loading: true } };\n    case WEATHER_SUCCESS:\n      return {\n        ...state,\n        weather: {\n          ...state.weather,\n          data: action.payload,\n          error: false,\n          loading: false\n        }\n      };\n    case WEATHER_FAIL:\n      return {\n        ...state,\n        weather: {\n          ...state.weather,\n          data: action.payload,\n          error: true,\n          loading: false\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { homeReducer } from './homeReducer';\n\nexport default combineReducers({\n  homeReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nexport type RootState = ReturnType<typeof reducers>;\n\nexport const store = createStore(reducers, composeWithDevTools(applyMiddleware(reduxThunk)));\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport { store } from './state/store';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}